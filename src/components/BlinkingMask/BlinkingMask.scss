$large-beam-size: 635px;
$small-beam-size: 435px;

$mobile-view-factor: 0.4;

// Issue Safari: https://stackoverflow.com/questions/46373626/workaround-for-safari-bug-when-an-element-with-animated-translate-is-resize

.blinking-mask {
    position: relative;
    display: inline-block;
    margin: 0 auto;

    &__phrase {
        position: absolute;
        @include font-stack-heading;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        margin: auto;
        height: rem(104px * $mobile-view-factor);
        width: rem(17px * $mobile-view-factor);

        @include mq(md) {
            width: 17px;
            height: 104px;
        }

        &--1 {
            --beam-offset-left: #{(rem($large-beam-size * $mobile-view-factor) / 2) * - 1};
            --phrase-left-position: calc(var(--beam-offset-left) + #{rem(-21px)});
            animation: rotatePhraseLeft 25s linear infinite;

            @include mq(md) {
                --beam-offset-left: #{(calculatevw($large-beam-size) / 2) * - 1};
                --phrase-left-position: calc(var(--beam-offset-left) + #{rem(-52px)});
            }
            @include mq(xxl) {
                --beam-offset-left: #{(rem($large-beam-size) / 2) * - 1};
                --phrase-left-position: calc(var(--beam-offset-left) + #{rem(-52px)});
            }
        }

        &--2 {
            --beam-offset-right: #{rem($large-beam-size * $mobile-view-factor) / 2};
            --phrase-right-position: calc(var(--beam-offset-right) + #{rem(21px)});
            animation: rotatePhraseRight 25s linear infinite;

            @include mq(md) {
                --beam-offset-right: #{calculatevw($large-beam-size) / 2};
                --phrase-right-position: calc(var(--beam-offset-right) + #{rem(52px)});
            }
            @include mq(xxl) {
                --beam-offset-right: #{rem($large-beam-size) / 2};
                --phrase-right-position: calc(var(--beam-offset-right) + #{rem(52px)});
            }
        }

        &--1,
        &--2 {
            animation-play-state: paused;

            .run-animation & {
                animation-play-state: running;
            }
        }
    }

    &__beams {
        &__wrapper {
            position: relative;
            display: inline-block;
            margin: 0 auto;
        }

        &--small {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: rem($small-beam-size * $mobile-view-factor);
            height: rem($small-beam-size * $mobile-view-factor);
            animation: rotateClockWise 35s linear infinite;

            @include mq(md) {
                width: calculatevw($small-beam-size);
                height: calculatevw($small-beam-size);
            }
            @include mq(xxl) {
                width: rem($small-beam-size);
                height: rem($small-beam-size);
            }

            > svg {
                @include childImage;
            }
        }

        &--large {
            width: rem($large-beam-size * $mobile-view-factor);
            height: rem($large-beam-size * $mobile-view-factor);
            animation: rotateCounterClockWise 50s linear infinite;

            @include mq(md) {
                width: calculatevw($large-beam-size);
                height: calculatevw($large-beam-size);
            }
            @include mq(xxl) {
                width: rem($large-beam-size);
                height: rem($large-beam-size);
            }

            > svg {
                @include childImage;
            }
        }
    }

    &__flare {
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        height: auto;
        width: rem(181px * $mobile-view-factor);
        animation: flashFlare 2s  infinite;

        @include mq(md) {
            width: calculatevw(181px);
        }

        @include mq(xxl) {
            width: rem(181px);
        }

        svg {
            @include childImage;
        }
    }

    &__image {
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        width: 11.33%;
        height: auto;
        display: block;

        > img {
            @include childImage;
        }
    }
}

@keyframes rotateClockWise {
    0% {
        transform: translate(-50%, -50%) rotate(0deg);
    }

    100% {
        transform: translate(-50%, -50%) rotate(360deg);
    }
}

@keyframes rotateCounterClockWise {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(-360deg);
    }
}

@keyframes flashFlare {
    0% {
        transform: translate(-50%, -50%) scale(1);
    }

    4% {
        transform: translate(-50%, -50%) scale(0.97);
    }

    8% {
        transform: translate(-50%, -50%) scale(0.99);
    }

    12% {
        transform: translate(-50%, -50%) scale(1.03);
    }

    18% {
        transform: translate(-50%, -50%) scale(0.97);
    }

    33% {
        transform: translate(-50%, -50%) scale(0.95);
    }

    41% {
        transform: translate(-50%, -50%) scale(1.06);
    }

    52% {
        transform: translate(-50%, -50%) scale(0.95);
    }

    66% {
        transform: translate(-50%, -50%) scale(1.15);
    }

    100% {
        transform: translate(-50%, -50%) scale(1);
    }
}

@keyframes rotatePhraseLeft {
    0% {
        transform: rotate(0deg) translateX(var(--phrase-left-position));
    }

    100% {
        transform: rotate(360deg) translateX(var(--phrase-left-position));
    }
}

@keyframes rotatePhraseRight {
    0% {
        transform: rotate(0deg) translateX(var(--phrase-right-position)) rotate(180deg);
    }

    100% {
        transform: rotate(360deg) translateX(var(--phrase-right-position)) rotate(180deg);
    }
}
